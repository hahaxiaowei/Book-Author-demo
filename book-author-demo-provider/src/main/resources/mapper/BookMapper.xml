<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.hfut.xc.bookauthordemo.provider.dao.BookMapper">
    <resultMap id="BaseResultMap" type="cn.edu.hfut.xc.bookauthordemo.common.model.Book">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="book_name" jdbcType="VARCHAR" property="bookName"/>
        <result column="book_class_id" jdbcType="VARCHAR" property="bookClassId"/>
        <result column="publisher_id" jdbcType="VARCHAR" property="publisherId"/>
        <result column="book_code" jdbcType="VARCHAR" property="bookCode"/>
        <result column="publication_date" jdbcType="VARCHAR" property="publicationDate"/>
        <result column="published_address" jdbcType="VARCHAR" property="publishedAddress"/>
    </resultMap>

    <resultMap id="BookAuthorResultMap" type="cn.edu.hfut.xc.bookauthordemo.common.model.Book" extends="BaseResultMap">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="author_name" jdbcType="VARCHAR" property="authorName"/>
        <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber"/>
        <result column="email_number" jdbcType="VARCHAR" property="emailNumber"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="age" jdbcType="VARCHAR" property="age"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="id_code" jdbcType="VARCHAR" property="idCode"/>
        <result column="personal_remark" jdbcType="VARCHAR" property="personalRemark"/>
        <result column="nationality_id" jdbcType="VARCHAR" property="nationalityId"/>
        <result column="nation" jdbcType="VARCHAR" property="nation"/>
        <result column="head_portrait" jdbcType="VARCHAR" property="headPortrait"/>
        <result column="qq_number" jdbcType="VARCHAR" property="qqNumber"/>
        <result column="wechat_number" jdbcType="VARCHAR" property="wechatNumber"/>
        <result column="sina_microblog_number" jdbcType="VARCHAR" property="sinaMicroblogNumber"/>
    </resultMap>


    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, book_name, book_class_id, publisher_id, book_code, publication_date, published_address
  </sql>


    <select id="selectByExample" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.BookExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from tbl_book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>


    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_book
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <!--根据图书信息查询图书和该图书所对应的作者-->
    <select id="selectBookAuthor" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.Book"
            resultMap="BookAuthorResultMap">
        SELECT tbl_author.id, tbl_author.author_name,
        tbl_author.phone_number,tbl_author.email_number,tbl_author.user_name,tbl_author.password, tbl_author.age,
        tbl_author.sex, tbl_author.address, tbl_author.id_code, tbl_author.personal_remark,
        tbl_author.nationality_id, tbl_author.nation, tbl_author.head_portrait, tbl_author.qq_number,
        tbl_author.wechat_number, tbl_author.sina_microblog_number, tbl_book.id AS id , tbl_book.book_name AS bookName,
        tbl_book.book_class_id AS bookClassId, tbl_book.publisher_id AS publisherId, tbl_book.book_code AS bookCode,
        tbl_book.publication_date AS publicationDate, tbl_book.published_address AS publishedAddress
        from tbl_book left join tbl_author_book on tbl_book.id = tbl_author_book.book_id left join tbl_author on
        tbl_author_book.author_id = tbl_author.id
        where
        <!--当id为初始值0，不再使用id作为查询条件 -->
        <if test="id !=null and id !=''">
            tbl_book.id = #{id,jdbcType=VARCHAR}
        </if>
        <!-- 当bookName为空或为空串时，不再使用name作为查询条件 -->
        <if test="bookName !=null and bookName !=''">
            tbl_book.book_name = #{bookName ,jdbcType=VARCHAR}
        </if>
    </select>

    <!--查询所有信息-->
    <select id="selectAll" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.Book" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from tbl_book
    </select>

    <!--根据图书表中的某个字段查询数据-->
    <select id="selectByColumn" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.Book"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_book
        <where>
            <if test="bookName !=null and bookName !=''">
                book_name LIKE CONCAT(CONCAT('%', #{bookName}),'%')
            </if>
            <if test="bookClassId !=null and bookClassId !=''">
                AND book_class_id = #{bookClassId}
            </if>
            <if test="publisherId !=null and publisherId !=''">
                AND publisher_id = #{publisherId}
            </if>
            <if test="bookCode !=null and bookCode !=''">
                AND book_code = #{bookCode}
            </if>
            <if test="publicationDate !=null and publicationDate !=''">
                AND publication_date = #{publicationDate}
            </if>
            <if test="publishedAddress !=null and publishedAddress !=''">
                AND published_address = #{publishedAddress}
            </if>
        </where>
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tbl_book
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.Book">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into tbl_book (id, book_name, book_class_id,
        publisher_id, book_code, publication_date,
        published_address)
        values (#{id,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, #{bookClassId,jdbcType=VARCHAR},
        #{publisherId,jdbcType=VARCHAR}, #{bookCode,jdbcType=VARCHAR}, #{publicationDate,jdbcType=VARCHAR},
        #{publishedAddress,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.Book">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into tbl_book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bookName != null">
                book_name,
            </if>
            <if test="bookClassId != null">
                book_class_id,
            </if>
            <if test="publisherId != null">
                publisher_id,
            </if>
            <if test="bookCode != null">
                book_code,
            </if>
            <if test="publicationDate != null">
                publication_date,
            </if>
            <if test="publishedAddress != null">
                published_address,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="bookName != null">
                #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="bookClassId != null">
                #{bookClassId,jdbcType=VARCHAR},
            </if>
            <if test="publisherId != null">
                #{publisherId,jdbcType=VARCHAR},
            </if>
            <if test="bookCode != null">
                #{bookCode,jdbcType=VARCHAR},
            </if>
            <if test="publicationDate != null">
                #{publicationDate,jdbcType=VARCHAR},
            </if>
            <if test="publishedAddress != null">
                #{publishedAddress,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.BookExample"
            resultType="java.lang.Long">
        select count(*) from tbl_book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.Book">
        update tbl_book
        <set>
            <if test="bookName != null">
                book_name = #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="bookClassId != null">
                book_class_id = #{bookClassId,jdbcType=VARCHAR},
            </if>
            <if test="publisherId != null">
                publisher_id = #{publisherId,jdbcType=VARCHAR},
            </if>
            <if test="bookCode != null">
                book_code = #{bookCode,jdbcType=VARCHAR},
            </if>
            <if test="publicationDate != null">
                publication_date = #{publicationDate,jdbcType=VARCHAR},
            </if>
            <if test="publishedAddress != null">
                published_address = #{publishedAddress,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.Book">
    update tbl_book
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_class_id = #{bookClassId,jdbcType=VARCHAR},
      publisher_id = #{publisherId,jdbcType=VARCHAR},
      book_code = #{bookCode,jdbcType=VARCHAR},
      publication_date = #{publicationDate,jdbcType=VARCHAR},
      published_address = #{publishedAddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>