<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.hfut.xc.bookauthordemo.provider.dao.AuthorMapper">
  <resultMap id="BaseResultMap" type="cn.edu.hfut.xc.bookauthordemo.common.model.Author">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="author_name" jdbcType="VARCHAR" property="authorName" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="email_number" jdbcType="VARCHAR" property="emailNumber"/>
    <result column="user_name" jdbcType="VARCHAR" property="userName"/>
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="age" jdbcType="VARCHAR" property="age" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="id_code" jdbcType="VARCHAR" property="idCode" />
    <result column="personal_remark" jdbcType="VARCHAR" property="personalRemark" />
    <result column="nationality_id" jdbcType="VARCHAR" property="nationalityId" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="head_portrait" jdbcType="VARCHAR" property="headPortrait" />
    <result column="qq_number" jdbcType="VARCHAR" property="qqNumber" />
    <result column="wechat_number" jdbcType="VARCHAR" property="wechatNumber" />
    <result column="sina_microblog_number" jdbcType="VARCHAR" property="sinaMicroblogNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, author_name, phone_number,email_number,user_name,password, age, sex, address, id_code, personal_remark,
    nationality_id, nation, head_portrait, qq_number, wechat_number, sina_microblog_number
  </sql>
  <select id="selectByExample" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.AuthorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tbl_author
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_author
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <!--根据作者表中的某个字段查询数据-->
  <select id="selectByColumn" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.Author" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from tbl_author
    <where>
      <if test="authorName !=null and authorName !=''">
        author_name LIKE CONCAT(CONCAT('%', #{authorName}),'%')
      </if>
      <if test="phoneNumber !=null and phoneNumber !=''">
        AND phone_number = #{phoneNumber}
      </if>
      <if test="emailNumber !=null and emailNumber !=''">
        AND email_number = #{emailNumber}
      </if>

      <if test="userName !=null and userName !=''">
        AND user_name = #{userName}
      </if>

      <if test="password !=null and password !=''">
        AND password = #{password}
      </if>
      <if test="age !=null and age !=''">
        AND age = #{age}
      </if>
      <if test="sex !=null and sex !=''">
        AND sex = #{sex}
      </if>
      <if test="address !=null and address !=''">
        AND address = #{address}
      </if>
      <if test="idCode !=null and idCode !=''">
        AND id_code = #{idCode}
      </if>
      <if test="personalRemark !=null and personalRemark !=''">
        AND personal_remark = #{personalRemark}
      </if>
      <if test="personalRemark !=null and personalRemark !=''">
        AND nationality_id = #{nationalityId}
      </if>
      <if test="nation !=null and nation !=''">
        AND nation = #{nation}
      </if>
      <if test="headPortrait !=null and headPortrait !=''">
        AND head_portrait = #{headPortrait}
      </if>
      <if test="qqNumber !=null and qqNumber !=''">
        AND qq_number = #{qqNumber}
      </if>
      <if test="wechatNumber !=null and wechatNumber !=''">
        AND wechat_number = #{wechatNumber}
      </if>
      <if test="sinaMicroblogNumber !=null and sinaMicroblogNumber !=''">
        AND sina_microblog_number = #{sinaMicroblogNumber}
      </if>
    </where>
  </select>

  <!--根据手机号查询作者信息-->
  <select id="selectByPhoneNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from tbl_author
    where phone_number = #{phoneNumber,jdbcType=VARCHAR}
  </select>

  <!--根据邮箱查询作者信息-->
  <select id="selectByEmailNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from tbl_author
    where email_number = #{emailNumber,jdbcType=VARCHAR}
  </select>

  <!--根据用户名查询作者信息-->
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from tbl_author
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>

  <!--根据身份证号查询作者信息-->
  <select id="selectByIDCard" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from tbl_author
    where id_code = #{idCode,jdbcType=VARCHAR}
  </select>

  <select id="selectAll" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.Author" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from tbl_author
  </select>

  <!--根据主键删除作者信息-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tbl_author
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <!--插入作者信息-->
  <insert id="insert" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.Author">
    <selectKey keyProperty="id" resultType="String" order="BEFORE">
      select replace(uuid(),'-','') from dual
    </selectKey>
    insert into tbl_author (id, author_name, phone_number,email_number,user_name,
      password, age, sex, 
      address, id_code, personal_remark, 
      nationality_id, nation, head_portrait, 
      qq_number, wechat_number, sina_microblog_number
      )
    values (#{id,jdbcType=VARCHAR}, #{authorName,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR},#{emailNumber,jdbcType=VARCHAR},#{userName,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{age,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{idCode,jdbcType=VARCHAR}, #{personalRemark,jdbcType=VARCHAR}, 
      #{nationalityId,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, #{headPortrait,jdbcType=VARCHAR}, 
      #{qqNumber,jdbcType=VARCHAR}, #{wechatNumber,jdbcType=VARCHAR}, #{sinaMicroblogNumber,jdbcType=VARCHAR}
      )
  </insert>

  <!--有条件的插入信息-->
  <insert id="insertSelective" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.Author">
    <selectKey keyProperty="id" resultType="String" order="BEFORE">
      select replace(uuid(),'-','') from dual
    </selectKey>
    insert into tbl_author
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="authorName != null">
        author_name,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="emailNumber != null">
        email_number,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="idCode != null">
        id_code,
      </if>
      <if test="personalRemark != null">
        personal_remark,
      </if>
      <if test="nationalityId != null">
        nationality_id,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="headPortrait != null">
        head_portrait,
      </if>
      <if test="qqNumber != null">
        qq_number,
      </if>
      <if test="wechatNumber != null">
        wechat_number,
      </if>
      <if test="sinaMicroblogNumber != null">
        sina_microblog_number,
      </if>
    </trim>

    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="authorName != null">
        #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>

      <if test="emailNumber != null">
        #{emailNumber,jdbcType=VARCHAR},
      </if>

      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>

      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="idCode != null">
        #{idCode,jdbcType=VARCHAR},
      </if>
      <if test="personalRemark != null">
        #{personalRemark,jdbcType=VARCHAR},
      </if>
      <if test="nationalityId != null">
        #{nationalityId,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="headPortrait != null">
        #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="qqNumber != null">
        #{qqNumber,jdbcType=VARCHAR},
      </if>
      <if test="wechatNumber != null">
        #{wechatNumber,jdbcType=VARCHAR},
      </if>
      <if test="sinaMicroblogNumber != null">
        #{sinaMicroblogNumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <!--计算数据量-->
  <select id="countByExample" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.AuthorExample" resultType="java.lang.Long">
    select count(*) from tbl_author
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <!--有条件的更新作者信息-->
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.Author">
    update tbl_author
    <set>
      <if test="authorName != null">
        author_name = #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="emailNumber != null">
        email_number = #{emailNumber,jdbcType=VARCHAR},
      </if>

      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>

      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="idCode != null">
        id_code = #{idCode,jdbcType=VARCHAR},
      </if>
      <if test="personalRemark != null">
        personal_remark = #{personalRemark,jdbcType=VARCHAR},
      </if>
      <if test="nationalityId != null">
        nationality_id = #{nationalityId,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="headPortrait != null">
        head_portrait = #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="qqNumber != null">
        qq_number = #{qqNumber,jdbcType=VARCHAR},
      </if>
      <if test="wechatNumber != null">
        wechat_number = #{wechatNumber,jdbcType=VARCHAR},
      </if>
      <if test="sinaMicroblogNumber != null">
        sina_microblog_number = #{sinaMicroblogNumber,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--根据主键更新作者信息-->
  <update id="updateByPrimaryKey" parameterType="cn.edu.hfut.xc.bookauthordemo.common.model.Author">
    update tbl_author
    set author_name = #{authorName,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      email_number = #{emailNumber,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      id_code = #{idCode,jdbcType=VARCHAR},
      personal_remark = #{personalRemark,jdbcType=VARCHAR},
      nationality_id = #{nationalityId,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      head_portrait = #{headPortrait,jdbcType=VARCHAR},
      qq_number = #{qqNumber,jdbcType=VARCHAR},
      wechat_number = #{wechatNumber,jdbcType=VARCHAR},
      sina_microblog_number = #{sinaMicroblogNumber,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>